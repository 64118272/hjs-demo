log4j.rootCategory=DEBUG, stdout, R, D

# 输出到控制台，测试环境级别为 DEBUG ， 生产环境为 INFO
# log4j.appender.stdout=org.apache.log4j.ConsoleAppender 配置日志目的输出地
# 可配置如下次：
# org.apache.log4j.ConsoleAppender（控制台），
# org.apache.log4j.FileAppender（文件），
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
# org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
# org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
# log4j.appender.stdout.Threshold = INFO 定义展示级别，以子项上为准
# 常用的为:
# org.apache.log4j.ConsoleAppender, org.apache.log4j.DailyRollingFileAppender, 
# org.apache.log4j.RollingFileAppender

# log4j.appender.stdout.layout=org.apache.log4j.PatternLayout 
# org.apache.log4j.HTMLLayout（以HTML表格形式布局），
# org.apache.log4j.PatternLayout（可以灵活地指定布局模式, 自定义），
# org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
# org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
# 一般用：# org.apache.log4j.PatternLayout（可以灵活地指定布局模式, 自定义），其它基本可以不用考虑

# log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %-5p ~ %m%n 
# %m   输出代码中指定的消息
# %p   输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
# %r   输出自应用启动到输出该log信息耗费的毫秒数 
# %c   输出所属的类目，通常就是所在类的全名 
# %t   输出产生该日志事件的线程名 
# %n   输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n” 
# %d   输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日  22 ： 10 ： 28 ， 921  
# %l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 ) 
# 常用格式  %d{ABSOLUTE} %-5p ~ %m%n
# [%-5p]%d{yyyy-MM-dd HH:mm:ss SSS} [%t][%l]: %n%m%n 
# 如果用了 %l 可以不用 %c, %r基本上无意义

#log4j.appender.R.DatePattern = '_'yyyyMMddHHmm 
#该配置若不配则表默认为按天产生，如果配置为如上'_'yyyyMMddHHmm表示一分钟一个文件，如果配置为 '_'yyyyMMddHH 则表示一个小时
#一个文件，建议按如上配置

#级别定义建议
#Debug 开发给开发人员使用
#Info 代码运行跟进记录，如程序入口，出口，以坟传入sql语句，传出数据打印, 不保存到文件
#Warn 与第三方对接时的传入参数，以及收到的参数，数据，等用于留存数据  保存到日志文件
#Error 异常，程序逾期值不对的时候应用 必须保存到日志文件

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout 
log4j.appender.stdout.Threshold = DEBUG  
log4j.appender.stdout.layout.ConversionPattern=[%-5p]%d{yyyy-MM-dd HH:mm:ss SSS} [%t][%l]: %n%m%n%r%n 

# R
log4j.appender.R=org.apache.log4j.DailyRollingFileAppender
log4j.appender.R.File=logs/warn.log
log4j.appender.R.Threshold = WARN
log4j.appender.R.DatePattern = '_'yyyyMMddHH
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=[%-5p]%d{yyyy-MM-dd HH:mm:ss SSS} [%t][%l]: %n%m%n%r%n 
#3、log4j.appender.file3.DatePattern='_' yyyy-MM-dd-HH-mm  
 
# D
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File=logs/error.log
log4j.appender.D.layout=org.apache.log4j.PatternLayout
log4j.appender.D.DatePattern = '_'yyyyMMddHH
log4j.appender.D.Threshold = ERROR 
log4j.appender.D.layout.ConversionPattern=[%-5p]%d{yyyy-MM-dd HH:mm:ss SSS} [%t][%l]: %n%m%n%r%n 